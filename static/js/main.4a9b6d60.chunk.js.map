{"version":3,"sources":["components/pokemon-item/pokemon-item.js","components/pokemons/pokemons.js","services/pokapi-service.js","components/app/app.js","index.js"],"names":["Pokemon_item","_this$props$pokemon","this","props","pokemon","id","name","base_experience","weight","height","abilities","sprites","react_default","a","createElement","className","src","front_default","alt","ability","Component","Pokemons","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","pokemons","map","pokemon_item_Pokemon_item","key","PokapiService","api_url","i","fetch","concat","res","ok","Error","status","json","push","App","_this","pokapi","state","currentPage","pokemonsPerPage","handleClick","bind","assertThisInitialized","previousPage","nextPage","getData","then","data","setState","event","Number","target","Math","ceil","length","_this2","_this$state","indexOfLastPokemon","indexOfFirstPokemon","currentPokemons","slice","allPageNumbers","renderPageNumbers","splice","number","onClick","pokemons_Pokemons","ReactDOM","render","app_App","document","getElementById"],"mappings":"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","file":"static/js/main.4a9b6d60.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nexport default class Pokemon_item extends Component {\n  render() {\n    const {id, name, base_experience, weight, height, abilities, sprites} = this.props.pokemon;\n    return (\n      <li className=\"pokemon\">\n        <div>\n          <img src={sprites.front_default} alt=\"PokemonImage\"/>\n        </div>\n        <div>\n          <h4>#{id} {name}</h4>\n          <p>base_experience: {base_experience}</p>\n          <p>weight: {weight}</p>\n          <p>height: {height}</p>\n          <p>ability: {abilities[0].ability.name}</p>\n        </div>\n\t\t  </li>\n    );\n  }\n}","import React, { Component } from 'react';\nimport Pokemon_item from '../pokemon-item/pokemon-item';\nimport './pokemons.css';\n\nexport default class Pokemons extends Component {\n\tconstructor() {\n\t\tsuper();\n\t}\n\t\n\trender() {\n\t\tconst pokemons = this.props.pokemons.map((pokemon) => {\n\t\t\treturn (\n\t\t\t\t<Pokemon_item key={pokemon.id} pokemon={pokemon}/>\n\t\t\t);\n\t\t});\n\n\t\treturn (\n\t\t\t<ul>\n\t\t\t\t{pokemons}\n\t\t\t</ul>\n\t\t);\n\t}\n}","export default class PokapiService {\n\n  api_url = `https://pokeapi.co/api/v2/pokemon`;\n\n  async getData() {\n  \tconst pokemons = [];\n  \tfor (let i=1; i<101; i++) {\n      const res = await fetch(`${this.api_url}/${i}`);\n      if (!res.ok) {\n        throw new Error(`Could not fetch ${this.api_url}/${i}, received ${res.status}`);\n      }\n      const pokemon = await res.json();\n      pokemons.push(pokemon);\n  \t}\n    return await pokemons;\n  }\n}","import React, { Component } from 'react';\nimport Pokemons from '../pokemons/pokemons';\nimport PokapiService from '../../services/pokapi-service';\nimport './app.css';\n\nexport default class App extends Component {\n  pokapi = new PokapiService();\n\n  constructor() {\n    super();\n\n    this.state = {\n      pokemons: [],\n      currentPage: 1,\n      pokemonsPerPage: 5\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n    this.previousPage = this.previousPage.bind(this);\n    this.nextPage = this.nextPage.bind(this);\n\n    const pokemons = [];\n\n    this.pokapi.getData().then((data) => {;\n      this.setState({\n        pokemons: data\n      });\n    });\n  }\n\n  handleClick(event) {\n    this.setState({\n      currentPage: Number(event.target.id)\n    });\n  }\n  previousPage() {\n    let currentPage=this.state.currentPage;\n    if (currentPage != 1) {currentPage--}\n    this.setState({\n      currentPage: currentPage\n    });\n  }\n  nextPage() {\n    let currentPage=this.state.currentPage;\n    if (currentPage != Math.ceil(this.state.pokemons.length/this.state.pokemonsPerPage)) {currentPage++};\n    this.setState({\n      currentPage: currentPage\n    });\n  }\n\n  render() {\n    const {pokemons, currentPage, pokemonsPerPage} = this.state;\n\n    const indexOfLastPokemon = currentPage * pokemonsPerPage;\n    const indexOfFirstPokemon = indexOfLastPokemon - pokemonsPerPage;\n    const currentPokemons = pokemons.slice(indexOfFirstPokemon, indexOfLastPokemon);\n\n    const allPageNumbers = [];\n    let pageNumbers = [];\n    for (let i=1; i <= Math.ceil(pokemons.length/pokemonsPerPage); i++){\n      allPageNumbers.push(i);\n    }\n    if (currentPage<5) {\n      pageNumbers = allPageNumbers.splice(0, 10);\n    }\n    else {\n      pageNumbers = allPageNumbers.splice(currentPage-5, 10);\n    } \n    const renderPageNumbers = pageNumbers.map(number => {\n      return (\n        <li key={number}  className=\"pages\" id={number} onClick={this.handleClick}>{number}</li>\n      );\n    });\n\n    return (\n      <div className=\"pokemons\">\n        <div>\n          <button onClick={this.previousPage}>prev</button>\n          <Pokemons pokemons={currentPokemons}/>\n          <button onClick={this.nextPage}>next</button>\n        </div>\n        <div>\n          <ul>\n           {renderPageNumbers}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/app';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}